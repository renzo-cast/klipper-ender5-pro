# RENAME to printer.cfg
# This file contains pin mappings for the Creality "v4.2.2" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
# Original from https://www.reddit.com/r/ender5/comments/r8b9u7/klipper_settings_for_ender_5_pro_on_creality_422/
# Edits from https://www.reddit.com/r/ender5/comments/qqa1tp/how_to_set_up_klipper_on_stock_ender_5_with_32bit/


#[virtual_sdcard]
#path: ~/gcode_files

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
baud: 115200
restart_method: command

[display_status]

[pause_resume]

[stepper_x]
step_pin: PC2
dir_pin: PB9 # or !PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 220 # could be 235 to match max
position_max: 220 # or 235
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7 # or !PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 220 # could be 235 to match max
position_max: 220 # or 235
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 4
# endstop_pin: ^PA7
endstop_pin: probe:z_virtual_endstop
# position_endstop: 0.0
position_max: 250
position_min: -2

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 32.629 # 33.019
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 260
pressure_advance: 0.10
# E-Steps: 99.34

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 135

[fan]
pin: PA0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3500
max_z_velocity: 5
max_z_accel: 100

[input_shaper]
shaper_freq_x: 58.1
shaper_freq_y: 38.7
shaper_type: ei

[gcode_arcs]
resolution: 1.0

[display] # RET6 12864 LCD
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[output_pin BEEPER_Pin]
pin: PC6
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1

[bed_screws]
screw1: 30,30
screw2: 200,30
screw3: 30,195
screw4: 200,195

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
# pin_up_touch_mode_reports_triggered: False
# probe_with_touch_mode: True
x_offset: -47
y_offset: -3
#z_offset: 0
speed: 2.0
samples: 2
sample_retract_dist: 7.0

[filament_switch_sensor endstop]
pause_on_runout: True
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
pause_delay: 0.5
switch_pin: ^PA7


[safe_z_home]
home_xy_position: 100, 100 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 20, 20
mesh_max: 170, 210
probe_count: 4, 3

[save_variables]
filename: ~/variables.cfg ; variable storage file

[gcode_macro START_PRINT]
description: Start the print
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  
  M140 S{BED_TEMP}
  # Use absolute coordinates
  G90
  # Reset the G-Code Z offset (adjust Z offset if needed)
  SET_GCODE_OFFSET Z=0.0
    
  #M104 S{EXTRUDER_TEMP} ; start heating extruder
  #M190 S{BED_TEMP} ; wait for bed temperature
  G28 ; Home
  M400 ; wait for homing to finish
  LEVEL_BED_ADVANCED MAX_AGE=10 ; probe mesh eventually
  
  # Move the nozzle near the bed
  G1 Z5 F3000
  # Move the nozzle very close to the bed
  G1 Z0.15 F300
  # Wait for bed to reach temperature
  M190 S{BED_TEMP}
  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}
  
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  G1 F3000 Z3 ; Move up
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro END_PRINT]
variable_machine_depth: 235
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z10
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y{machine_depth}
    # SAVE_CONFIG if a mesh was probed in START_PRINT
    SAVE_IF_SET     
    # Disable steppers
    M84
    # Print message on LCD
    M117 That's All Folks
  
# from: https://www.reddit.com/r/klippers/comments/qdr0g9/my_gcode_macro_to_mesh_level_the_bed_every_10th/  
; This is where the magic happens:
; MAX_AGE is checked against the stored variable
; SAVE=1 can be used to force saving the mesh (restarts klipper, so
;        only for manual usage)
; FORCE_LEVEL=1 forces a mesh probe even if MAX_AGE is not reached
[gcode_macro LEVEL_BED_ADVANCED]
description: Levels the bed if the last leveling was MAX_AGE runs ago. Force leveling by setting FORCE
variable_save_at_end: 0
gcode:
  {% set max_age = params.MAX_AGE|default(10)|int %}
  {% set force_level = params.FORCE|default(0)|int %}
  {% set save = params.SAVE|default(0)|int %}

  ; load level_age from stored variables
  {% set svv = printer.save_variables.variables %}
  {% if "level_age" not in svv %} ; first run
    SAVE_VARIABLE VARIABLE=level_age VALUE={max_age}
    {% set level_age = 1 %}
  {% else %} ; load level_age and increment
    {% set level_age = svv.level_age %}
    SAVE_VARIABLE VARIABLE=level_age VALUE={level_age|int + 1}
  {% endif %}
  {action_respond_info("Bed mesh age is " + level_age|string) + "."} 

  ; Level eventually
  {% if force_level or (level_age >= max_age|int) %}
    {action_respond_info("Bed mesh exceeded max age. Leveling...")} 

    ; homing if not homed yet
    {% if 'xy' not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    @BEDLEVELVISUALIZER
    BED_MESH_CALIBRATE
    BED_MESH_OUTPUT
    {% if save %}
      SAVE_VARIABLE VARIABLE=level_age VALUE=1 ; reset counter
      SAVE_CONFIG
    {% else %}
      SET_GCODE_VARIABLE MACRO=LEVEL_BED_ADVANCED VARIABLE=save_at_end VALUE=1
    {% endif %}
  {% else %}
    {action_respond_info("Loading old bed mesh.")} 
    BED_MESH_PROFILE LOAD=default
  {% endif %} 

# runs SAVE_CONFIG if the g-code variable was set in start gcode
[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro LEVEL_BED_ADVANCED"].save_at_end == 1 %}
  {action_respond_info("Saving was requested - saving and restarting now.")}
  SAVE_VARIABLE VARIABLE=level_age VALUE=1
  SAVE_CONFIG
  {% endif %}
    
# from https://www.reddit.com/r/ender5/comments/qqa1tp/how_to_set_up_klipper_on_stock_ender_5_with_32bit/
[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds
    {% endif %}
    SET_PIN PIN=BEEPER_Pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=BEEPER_Pin VALUE=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.564
#*# pid_ki = 1.877
#*# pid_kd = 116.406
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.657
#*# pid_ki = 1.074
#*# pid_kd = 1065.592
#*#
#*# [bltouch]
#*# z_offset = 0.469
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.012500, -0.050000, -0.120625, -0.176250
#*# 	-0.005625, -0.065625, -0.054375, -0.105625
#*# 	-0.066875, -0.118750, -0.134375, -0.118125
#*# tension = 0.2
#*# min_x = 20.0
#*# algo = lagrange
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 20.0
#*# x_count = 4
#*# max_y = 210.0
#*# mesh_x_pps = 2
#*# max_x = 170.0
